generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username  String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cuid      String    @unique @default(cuid())
  id        Int       @id @unique @default(autoincrement())
  role      String
  password  Password?
  turns     Turn[]
  games     Game[]
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [cuid], onDelete: Cascade)
}

model Turn {
  id          Int      @id @unique @default(autoincrement())
  cuid        String   @unique @default(cuid())
  createdById Int?
  createdBy   User?    @relation(fields: [createdById], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  gameId      Int
  game        Game    @relation(fields: [gameId], references: [id])
  turnNumber  Int
  cardsBought String[]
  cardsCost   Int
  cardsDiscount Int
  cities      Int
  people      Int
  astAdvance  Int
  isDone      Boolean
  calamities  String[]
  monumentRed Int
  monumentGreen Int
  monumentBlue Int
  monumentOrange Int
  monumentYellow Int
  writtenRecordRed Int
  writtenRecordGreen Int
  writtenRecordBlue Int
  writtenRecordOrange Int
  writtenRecordYellow Int
}

model Game {
  id  Int @id @unique @default(autoincrement())
  createdAt   DateTime @default(now())
  createdById Int?
  createdBy   User?    @relation(fields: [createdById], references: [id])
  turns Turn[]
  
}

